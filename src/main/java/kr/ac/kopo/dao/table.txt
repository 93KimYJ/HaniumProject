CREATE TABLE "HC_USER" (
   "USER_ID"   VARCHAR(255)      NOT NULL,
   "PASSWORD"   VARCHAR(255)      NULL,
   "EMAIL"   VARCHAR(255)      NULL,
   "NAME"   VARCHAR(255)      NULL,
   "PHONE_NUM"   VARCHAR(255)      NULL,
   "BIRTH_DATE"   DATE      NULL,
   "ADDR"   VARCHAR(255)      NULL
);

--DROP TABLE HC_USER;

CREATE TABLE "EXERCISE" (
   "E_NO" NUMBER(20) NOT NULL PRIMARY KEY,
   "USER_ID"   VARCHAR(255)      NOT NULL,
   "TYPE"   VARCHAR(255)      NULL,
   "CNT"   NUMBER(20)      NULL,
    END_TIME   TIMESTAMP DEFAULT CURRENT_TIMESTAMP      NULL
);

CREATE TABLE "DISEASE" (
   "USER_ID"   VARCHAR(255)      NOT NULL,
   "TYPE"   VARCHAR(255)      NULL
);

SELECT * FROM HC_USER;

INSERT INTO "HC_USER" ("USER_ID", "PASSWORD", "EMAIL", "NAME", "PHONE_NUM", "BIRTH_DATE", "ADDR")
VALUES ('id3', 'pwpw', 'email3@example.com', 'Name', '010-1003-2000', TO_DATE('2023-07-11', 'YYYY-MM-DD'), '지구');

SELECT * FROM exercise ORDER BY E_NO;

INSERT INTO exercise (E_NO, USER_ID, TYPE, CNT)
VALUES (COALESCE((SELECT MAX(E_NO) + 1 FROM exercise), 1), 'id3', 'dumbbel', 7);



SELECT * FROM EXERCISE
WHERE END_TIME >= TRUNC(TO_DATE('2023-09-05', 'YYYY-MM-DD'), 'IW') 
AND END_TIME < TRUNC(TO_DATE('2023-09-06', 'YYYY-MM-DD'), 'IW') + 7
AND TYPE = 'dumbbel' AND USER_ID = 'idid'
ORDER BY e_no desc;

SELECT * FROM exercise
ORDER BY END_TIME DESC;




SELECT USER_ID, COALESCE(MAX(CNT), 0 ) AS CNT
FROM EXERCISE
GROUP BY USER_ID, TYPE ORDER BY CNT DESC;


SELECT E_NO, USER_ID, TYPE, CNT, END_TIME
FROM EXERCISE e
WHERE (USER_ID, CNT, TYPE) IN (
    SELECT USER_ID, MAX(CNT) AS MaxCnt, TYPE
    FROM EXERCISE
    GROUP BY USER_ID, "TYPE"
)
ORDER BY CNT DESC;

--
-- VIEWS
--

-- 모든 시간대 최고기록

CREATE OR replace VIEW EX_BEST_CNT AS
SELECT E_NO, USER_ID, TYPE, CNT, END_TIME
FROM EXERCISE e
WHERE (USER_ID, CNT, TYPE) IN (
    SELECT USER_ID, MAX(CNT) AS MaxCnt, TYPE
    FROM EXERCISE
    GROUP BY USER_ID, "TYPE"
)
ORDER BY CNT DESC;

SELECT * FROM EX_BEST_CNT ebc 
-- 달

/*CREATE OR REPLACE VIEW EX_MONTH_BEST_CNT AS
SELECT E_NO, USER_ID, TYPE, CNT, END_TIME
FROM EXERCISE e
WHERE (USER_ID, CNT, TYPE) IN (
	    SELECT USER_ID, MAX(CNT) AS MaxCnt, TYPE
	    FROM (
	    	SELECT * FROM EXERCISE e2 
	    	WHERE end_time > TRUNC(SYSDATE, 'MONTH')
	    )
	    GROUP BY USER_ID, "TYPE"
	)
	AND end_time > TRUNC(SYSDATE, 'MONTH')
ORDER BY CNT DESC;*/

/*SELECT E_NO, USER_ID, TYPE, CNT, END_TIME
FROM (
    SELECT E_NO, USER_ID, TYPE, CNT, END_TIME,
           ROW_NUMBER() OVER (PARTITION BY USER_ID, CNT ORDER BY E_NO) AS rn
    FROM EXERCISE e
    WHERE (USER_ID, CNT, TYPE) IN (
        SELECT USER_ID, MAX(CNT) AS MaxCnt, TYPE
        FROM (
            SELECT * FROM EXERCISE e2 
            WHERE end_time >= TRUNC(SYSDATE, 'IW')
        )
        GROUP BY USER_ID, "TYPE"
    )
    AND end_time >= TRUNC(SYSDATE, 'IW')
) ranked
WHERE rn = 1
ORDER BY CNT DESC;*/

CREATE OR REPLACE VIEW EX_MONTH_BEST_CNT AS
SELECT E_NO, USER_ID, TYPE, CNT, END_TIME
FROM (
    SELECT E_NO, USER_ID, TYPE, CNT, END_TIME,
           RANK() OVER (PARTITION BY USER_ID, "TYPE" ORDER BY CNT DESC, E_NO ASC) AS rnk
    FROM EXERCISE e
    WHERE end_time >= TRUNC(SYSDATE, 'MONTH')
) ranked
WHERE rnk = 1
ORDER BY CNT DESC;

SELECT * FROM EX_MONTH_BEST_CNT;

--주

CREATE OR REPLACE VIEW EX_WEEK_BEST_CNT AS
SELECT E_NO, USER_ID, TYPE, CNT, END_TIME
FROM (
    SELECT E_NO, USER_ID, TYPE, CNT, END_TIME,
           RANK() OVER (PARTITION BY USER_ID, "TYPE" ORDER BY CNT DESC, E_NO ASC) AS rnk
    FROM EXERCISE e
    WHERE end_time >= TRUNC(SYSDATE, 'IW')
) ranked
WHERE rnk = 1
ORDER BY CNT DESC;

SELECT * FROM EX_WEEK_BEST_CNT;

--일

CREATE OR REPLACE VIEW EX_DAY_BEST_CNT AS
SELECT E_NO, USER_ID, TYPE, CNT, END_TIME
FROM (
    SELECT E_NO, USER_ID, TYPE, CNT, END_TIME,
           RANK() OVER (PARTITION BY USER_ID, "TYPE" ORDER BY CNT DESC, E_NO ASC) AS rnk
    FROM EXERCISE e
    WHERE end_time >= TRUNC(SYSDATE)
) ranked
WHERE rnk = 1
ORDER BY CNT DESC;

SELECT * FROM EX_DAY_BEST_CNT;



SELECT * FROM EXERCISE e2 
WHERE end_time >= TRUNC(SYSDATE)

SELECT * FROM EXERCISE e 
WHERE end_time > TRUNC(SYSDATE, 'IW');


SELECT * FROM EX_BEST_CNT
WHERE end_time > TRUNC(TO_DATE('2023-09-06', 'YYYY-MM-DD'), 'IW')


SELECT * FROM EX_BEST_CNT;

SELECT * FROM EX_BEST_CNT 
WHERE end_time > TRUNC(TO_DATE('2023-09-06', 'YYYY-MM-DD'), 'MONTH');


SELECT * FROM EXERCISE_BEST_CNT;

SELECT * FROM EXERCISE_BEST_CNT
WHERE TYPE = 'dumbbel' 
AND END_TIME < TRUNC(TO_DATE('2023-09-06', 'YYYY-MM-DD'), 'IW') + 7
AND rownum <= 2;


SELECT * FROM EXERCISE_BEST_CNT e 
WHERE TYPE = 'dumbbel' 
AND END_TIME > TRUNC(TO_DATE('2023-09-06', 'YYYY-MM-DD'), 'MONTH')
AND END_TIME < LAST_DAY(TO_DATE('2023-09-06', 'YYYY-MM-DD'));



SELECT * FROM EXERCISE e ;


-- 운동 횟수 총 합
SELECT * 
FROM (
	SELECT user_id, TYPE, sum(cnt) AS cnt FROM exercise
	GROUP BY user_id, TYPE
	ORDER BY cnt DESC
	)
WHERE USER_ID = 'idid';


-- 가장 많이 한 운동
SELECT * FROM (
	SELECT user_id, TYPE, count(cnt) AS trycnt, sum(cnt) AS cnt FROM exercise
	GROUP BY user_id, TYPE
	ORDER BY cnt DESC )
WHERE USER_ID = 'idid' AND rownum <= 1;